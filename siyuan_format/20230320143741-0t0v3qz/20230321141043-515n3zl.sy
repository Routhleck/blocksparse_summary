{
	"ID": "20230321141043-515n3zl",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230321141043-515n3zl",
		"title": "class BlocksparseMatmulBprop_NC",
		"updated": "20230322152201"
	},
	"Children": [
		{
			"ID": "20230322152005-chh63e3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230322152005-chh63e3",
				"updated": "20230322152005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "继承自父类"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "block-ref",
					"TextMarkBlockRefID": "20230321140954-ztknqm4",
					"TextMarkBlockRefSubtype": "s",
					"TextMarkTextContent": "BlocksparseMatmul_NC"
				},
				{
					"Type": "NodeText",
					"Data": "，并实现向前传播操作"
				}
			]
		},
		{
			"ID": "20230322152005-8ct198u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230322152005-8ct198u",
				"updated": "20230322152201"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "与父类基本一致，不同之处在于它的构造函数调用了父类的构造函数，并传递了参数 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "\u0026quot;bprop\u0026quot;"
				},
				{
					"Type": "NodeText",
					"Data": "​、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "32"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "128"
				},
				{
					"Type": "NodeText",
					"Data": "​，这些参数指定了稀疏矩阵乘法中使用的 CUDA kernel 的操作类型、深度和线程数。"
				}
			]
		},
		{
			"ID": "20230322152005-eowbegh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230322152005-eowbegh",
				"updated": "20230322152005"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "同时重写了Compute函数"
				}
			]
		},
		{
			"ID": "20230321141052-z251c95",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230321141052-z251c95",
				"updated": "20230321141052"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "template \u003cCTYPE3(TA,TB,TC)\u003e\nclass BlocksparseMatmulBprop_NC : public BlocksparseMatmul_NC\u003cVTYPE3(TA,TB,TC)\u003e\n{\npublic:\n    BlocksparseMatmulBprop_NC(bsmm_params* params) :\n        BlocksparseMatmul_NC\u003cVTYPE3(TA,TB,TC)\u003e(params, \"bprop\", 32, 128) {}\n\n    virtual Status Compute(const TA* A, const TB* B, TC* C)\n    {\n        return this-\u003eXprop_Kernel(A, B, C);\n    }\n};\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}
{
	"ID": "20230320154849-3k1b1o4",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230320154849-3k1b1o4",
		"title": "cudaError_t hgemm_blocksparse_xn_128_sdd",
		"updated": "20230320154905"
	},
	"Children": [
		{
			"ID": "20230320154902-8lm1dns",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20230320154902-8lm1dns",
				"updated": "20230320154904"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Bw"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "cudaError_t hgemm_blocksparse_xn_128_sdd(const ehalf* X, const ehalf* W, ehalf* Y, bsmm_params* params, uint op)\n{\n    dim3 grid(params-\u003eblk_a*params-\u003eblk_b, params-\u003eblk_B, params-\u003eblk_A);\n    uint blk_N = params-\u003eblk_b * params-\u003eblk_B;\n\n    //cuMemsetD16Async((CUdeviceptr)Y, 0, params-\u003eK * params-\u003eN, params-\u003estream);\n    if (params-\u003elocks \u003e 0)\n        cuMemsetD32Async((CUdeviceptr)params-\u003eLock, 0, blk_N * params-\u003elocks * 2, params-\u003estream);\n\n    const uint2* Lut = (const uint2*)params-\u003eLut;\n    uint* Lock       = (uint*)params-\u003eLock;\n\n    uint shared = params-\u003eshared + params-\u003eshared/2;\n\n    if (params-\u003ebsize == 8)\n    {\n        shared += 4;\n        if (params-\u003eGate == 0)\n        {\n            if (op == OP_N)\n                hgemm_blocksparse_8x128x8_xn_sdd\u003cOP_N,false\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n            else\n                hgemm_blocksparse_8x128x8_xn_sdd\u003cOP_T,false\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n        }\n        else\n        {\n            if (op == OP_N)\n                hgemm_blocksparse_8x128x8_xn_sdd\u003cOP_N, true\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n            else\n                hgemm_blocksparse_8x128x8_xn_sdd\u003cOP_T, true\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n        }\n    }\n    else if (params-\u003ebsize == 16)\n    {\n        if (params-\u003eGate == 0)\n        {\n            if (op == OP_N)\n                hgemm_blocksparse_16x128x16_xn_sdd\u003cOP_N,false\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n            else\n                hgemm_blocksparse_16x128x16_xn_sdd\u003cOP_T,false\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n        }\n        else\n        {\n            if (op == OP_N)\n                hgemm_blocksparse_16x128x16_xn_sdd\u003cOP_N, true\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n            else\n                hgemm_blocksparse_16x128x16_xn_sdd\u003cOP_T, true\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n        }\n    }\n    else if (params-\u003ebsize == 32)\n    {\n        if (params-\u003eGate == 0)\n        {\n            if (op == OP_N)\n                hgemm_blocksparse_32x128x32_xn_sdd\u003cOP_N,false\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n            else\n                hgemm_blocksparse_32x128x32_xn_sdd\u003cOP_T,false\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n        }\n        else\n        {\n            if (op == OP_N)\n                hgemm_blocksparse_32x128x32_xn_sdd\u003cOP_N, true\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n            else\n                hgemm_blocksparse_32x128x32_xn_sdd\u003cOP_T, true\u003e\u003c\u003c\u003cgrid,128,shared,params-\u003estream\u003e\u003e\u003e(Lut, params-\u003eGate, W, X, Y, Lock, params-\u003elocks, params-\u003eN, params-\u003eblk_a, params-\u003eblk_b, blk_N);\n        }\n    }\n    return cudaPeekAtLastError();\n}\ncudaError_t hgemm_blocksparse_xn_128_sdd(const bhalf* X, const bhalf* W, bhalf* Y, bsmm_params* params, uint op) { return cudaSuccess; }\ncudaError_t hgemm_blocksparse_xn_128_sdd(const float* X, const float* W, float* Y, bsmm_params* params, uint op) { return cudaSuccess; }\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20230320154905-7dffjgo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230320154905-7dffjgo"
			}
		}
	]
}